require 'app/aggregates/<%= aggregate_name %>'

module <%= project_class_name %>
  module Commands
    module <%= aggregate_class_name %>
      module <%= command_class_name %>
        class Command
          attr_reader :aggregate_id, :payload

          def initialize(params)
            @payload      = params
            @aggregate_id = payload.delete(:<%= aggregate_name %>_id)
          end

          def validate
            # Add validation here
          end
        end

        class CommandHandler
          def self.handle(command)
            command.validate

            repository = EventSourcery::Repository.new(
              event_source: <%= project_class_name %>.event_source,
              event_sink:   <%= project_class_name %>.event_sink,
            )

            aggregate = repository.load(Aggregates::<%= aggregate_class_name %>, command.aggregate_id)
            aggregate.<%= command_name %>(command.payload.to_h)
            repository.save(aggregate)
          end
        end
      end
    end
  end
end
