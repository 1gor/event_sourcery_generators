module <%= project_name.camelize %>
  module EventProcessors
    class <%= dep_name.camelize %>
      include EventSourcery::DownstreamEventProcessor

      self.processor_name = :<%= dep_name %>

      processes_events :placeholder

      emits_events :placeholder

      def process(event)
        method = :"process_#{event.type}"
        raise "I don't know how to process #{event.type}" unless respond_to?(method, true)
        send(method, event)
      end

      private

      def process_placeholder(event)
        emit_event(
          type: :placeholder,
          aggregate_id: event.aggregate_id,
          body: {},
        )
      end
    end
  end
end
